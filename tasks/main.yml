---

- name: Combine vnStat configuration inventory variables
  set_fact:
    vnstat_config_options: '{{ vnstat_config_options|combine(vnstat_group_config_options,vnstat_host_config_options) | default({}) }}'

- name: Install vnStat
  package: name=vnstat state=present

- name: create vnstat database directory
  file:
    path: '{{ vnstat_db_path }}'
    owner: '{{ vnstat_user }}'
    group: '{{ vnstat_group }}'
    state: directory

- name: Configure vnStat number options
  lineinfile:
    dest: '{{ vnstat_config_file }}'
    regexp: '^{{ item.key }}'
    line: '{{ item.key }} {{ item.value }}'
  when: item.value is number
  with_dict: '{{ vnstat_config_options }}'
  notify: [ 'Restart vnstat' ]

- name: Configure vnStat string options
  lineinfile:
    dest: '{{ vnstat_config_file }}'
    regexp: '^{{ item.key }}'
    line: '{{ item.key }} "{{ item.value }}"'
  when: item.value is string
  with_dict: '{{ vnstat_config_options }}'
  notify: [ 'Restart vnstat' ]

- name: Initiate vnstat interfaces databases
  command: vnstat --update --iface '{{ item | quote }}'
  args:
    creates: '{{ vnstat_db_path }}/{{ item }}'
  become_user: '{{ vnstat_user }}'
  with_flattened:
    - '{{ vnstat_interfaces }}'
    - '{{ vnstat_group_interfaces }}'
    - '{{ vnstat_host_interfaces }}'
